/*
	@author So Choi

	Name of Program:  	TableSimulator
	Description:    	This class tests the HW5 hash table files as given in instructions.
	Date:         		6/8/17
	OS:         		Mac OS X
	Compiler:       	terminal (javac)
*/
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

public class TableSimulator{
	public static Scanner userScanner = new Scanner(System.in);

	// opens a text file for input, returns a Scanner:
	public static Scanner openInputFile(){
		String filename;
    	Scanner scanner=null;
        
		System.out.print("Enter the input filename: ");
		filename = userScanner.nextLine();
    	File file= new File(filename);

    	try {
    		scanner = new Scanner(file);
    	} catch(FileNotFoundException fe) {
			System.out.println("Can't open input file\n");
			return null; // array of 0 elements
    	} // end catch
    	return scanner;
	}

	/*
		Test the two hash tables
	*/
	public static void testHashTable(HashTable<IpAddress> table, IpAddress targetIpAddress) {
		IpAddress tempIpAddress;
		IpAddress copyIpAddress;
		// found a IpAddress in table1 in table2
		tempIpAddress = table.getEntry(targetIpAddress);
		if ( tempIpAddress != null ) {
			copyIpAddress = new IpAddress(tempIpAddress.getDottedDecimal());
			System.out.println("\nRetrieved in HashTable, IpAddress: " + tempIpAddress + ", now trying to delete it");
			// now delete it 
			testRemove( table, copyIpAddress ); // YOU WRITE THIS (SEE SPECS BELOW)
		} else {
			System.out.println("\nError in HashTable: can't retrieve "+ targetIpAddress);
		}
		
		// now test not finding it:
		copyIpAddress = new IpAddress(); // assign a default IpAddress
		System.out.println("The contains method for Default IpAddress returns " + table.contains(copyIpAddress));
		tempIpAddress = table.getEntry(targetIpAddress);
		if ( tempIpAddress != null ) {
			System.out.println("Retrieved in HashTable, Default IpAddress (BAD!) ");
		} else {
			System.out.println("Didn't retrieve Default IpAddress (GOOD!)");
		}
		testRemove( table, copyIpAddress ); // call again, with default
	} // testHashTable


	/*
		Test the two hash tables' insert and remove methods
	*/
	public static void testRemove(HashTable<IpAddress> table, IpAddress targetIpAddress){
		//     Display the result of calling the parameter HashTable's insert method passing the targetIpAdddress, with a text as shown in the test runs (be sure to display the IpAddress parameter, too) 
		boolean isAdded = false;

		System.out.print("The insert method for " + targetIpAddress);
		isAdded = table.insert(targetIpAddress);
		System.out.println(" returns " + isAdded);

		//     Call the parameter HashTable's remove method, passing the targetIpAdddress
		boolean isRemoved = false;
		System.out.print("Removed " + targetIpAddress);
		isRemoved = table.remove(targetIpAddress);

		//     If it returns true, display a message that it was removed 
		//			(and display targetIpAddress)
		//     If it returns false, display a message that the remove failed 
		//			(and display targetIpAddress
		if (isRemoved) {
			System.out.println(" successfully!");
		} else {
			System.out.println("Remove failed!");
		}
	}

	/*
		Open an input file the same way you did in Prog. HW#1 (using the openInputFile method, also given in the Code file UNCHANGED). If the file doesn't open, return null. If it opens:
	*/
	private static IpAddress fillTables(HashTable<IpAddress> qp, HashTable<IpAddress> sc, Scanner file){
		IpAddress lastIp = null;

		if(file != null){
			while (file.hasNextLine()) {
			    String line = file.nextLine();

			    line = line.trim();
			    // create a new IpAddress with data from the line of input
			    IpAddress ip = new IpAddress(line);

			    // insert the same IpAddress instance to each hash table
			    // (Optional: display if it successfully inserted or not.)
			    System.out.println("Inserted into HashSC: " + ip);
			    sc.insert(ip);

			    System.out.println("Inserted into HashSC: " + ip);
			    qp.insert(ip);

			    lastIp = ip;
			}

			file.close();
		}
		
		// RETURN THE LAST IpAddress object inserted into the HashTables, or null if the file didn't open or none were read
		return lastIp;
	}

	/*
		call the displayTable method AND call the displayStatistics for your HashSC and then your HashQP table, (make sure you display a description of which table is being displayed first)
	*/
	private static void displayAll(HashTable<IpAddress> table){
		table.displayTable();
		table.displayStatistics();
	}

	/*
		check if the IpAddress returned from the readFile method is contained in the HashSC table (calling contains() method), and if it is, call the testHashTable method (in the Code file, MUST ALSO CALL YOUR OWN test method) for your HashSC table, ALSO passing the IpAddress RETURNED from the readFile method (make sure you display a description of which table is being tested first) (IF contains() RETURNS FALSE, DISPLAY A MESSAGE)
	*/
	private static void testTableMethods(HashTable<IpAddress> table, IpAddress ip){
		if (table.contains(ip)) {
			testHashTable(table, ip);
		} else {
			System.out.println("Didn't retrieve " + ip);
		}
	}

	public static void main(String[] args){
		/*
			Write main so it declares 2 HashTable<IpAddress> variables (they MUST be inside main)
		*/

		HashTable<IpAddress> qpTable = new HashQP<>(new IpAddressStringHasher(), new IpAddressStringComparator());
		HashTable<IpAddress> scTable = new HashSC<>(new IpAddressValueHasher(), new IpAddressValueComparator());

	    /*
			read the file which has several sets of IpAddress, which has a String, one per line (read to the end of line, then trim()), create a new IpAddress with data from the line of input, insert the same IpAddress instance to each hash table.

			Read until the end of file (use the Scanner's hasNext() method). (Optional: display if it successfully inserted or not.) Close the file at the end of the method, then call a method (you write) to fill the a HashSC and HashQP (both are parameters in ONE method because they will refer to the SAME data) (BUT THERE WILL BE AN IpAddress return value).
	    */
		Scanner file = openInputFile();
		IpAddress lastIp = null;
		lastIp = fillTables(qpTable, scTable, file);
		
		// if the file-reading method wasn't successful (returns null), display "Unable to read the file" and end the program.
		if (lastIp == null) {
			System.out.println("Unable to read the file");
			return;
		}

		System.out.print("\nContents of HashSC with the IpValue key:");
		displayAll(scTable);

		System.out.print("\nContents of HashQP with the String key:");
		displayAll(qpTable);

		System.out.println("\nTesting HashSC with IpValue key:");
		testTableMethods(scTable, lastIp);

		System.out.println("\nTesting HashQP with String key:");
		testTableMethods(qpTable, lastIp);

		/*
			AGAIN, call the displayTable method for your HashSC and then HashQP table
		*/
		System.out.print("\nNow the contents of HashSC with the IpValue key:");
		scTable.displayTable();

		System.out.print("\n\nNow the contents of HashQP with the String key has:");
		qpTable.displayTable();

		System.out.println("\n");
		// End of tests
	}
}

/*
		OUTPUT
*/
/*
	Enter the input filename: HW5Input.txt
	Inserted into HashSC: 205.226.201, cde2c9
	Inserted into HashSC: 205.226.201, cde2c9
	Inserted into HashSC: 205.226.203.186, cde2cbba
	Inserted into HashSC: 205.226.203.186, cde2cbba
	Inserted into HashSC: 205.226.203.35, cde2cb23
	Inserted into HashSC: 205.226.203.35, cde2cb23
	Inserted into HashSC: 205.226.203.56, cde2cb38
	Inserted into HashSC: 205.226.203.56, cde2cb38
	Inserted into HashSC: 205.226.203.62, cde2cb3e
	Inserted into HashSC: 205.226.203.62, cde2cb3e
	Inserted into HashSC: 205.266.204.238, ce0accee
	Inserted into HashSC: 205.266.204.238, ce0accee
	Inserted into HashSC: 202.33.250.146, ca21fa92
	Inserted into HashSC: 202.33.250.146, ca21fa92
	Inserted into HashSC: 202.33.250.147, ca21fa93
	Inserted into HashSC: 202.33.250.147, ca21fa93
	Inserted into HashSC: 202.33.250.148, ca21fa94
	Inserted into HashSC: 202.33.250.148, ca21fa94
	Inserted into HashSC: 202.33.250.149, ca21fa95
	Inserted into HashSC: 202.33.250.149, ca21fa95
	Inserted into HashSC: 202.33.250.150, ca21fa96
	Inserted into HashSC: 202.33.250.150, ca21fa96
	Inserted into HashSC: 202.33.250.151, ca21fa97
	Inserted into HashSC: 202.33.250.151, ca21fa97
	Inserted into HashSC: 202.33.250.152, ca21fa98
	Inserted into HashSC: 202.33.250.152, ca21fa98
	Inserted into HashSC: 202.33.250.153, ca21fa99
	Inserted into HashSC: 202.33.250.153, ca21fa99
	Inserted into HashSC: 202.33.250.154, ca21fa9a
	Inserted into HashSC: 202.33.250.154, ca21fa9a
	Inserted into HashSC: 204.162.96, cca260
	Inserted into HashSC: 204.162.96, cca260
	Inserted into HashSC: 204.162.97.1, cca26101
	Inserted into HashSC: 204.162.97.1, cca26101
	Inserted into HashSC: 204.162.97.152, cca26198
	Inserted into HashSC: 204.162.97.152, cca26198
	Inserted into HashSC: 204.162.97.17, cca26111
	Inserted into HashSC: 204.162.97.17, cca26111
	Inserted into HashSC: 204.162.97.2, cca26102
	Inserted into HashSC: 204.162.97.2, cca26102
	Inserted into HashSC: 206.3.30.196, ce031ec4
	Inserted into HashSC: 206.3.30.196, ce031ec4
	Inserted into HashSC: 206.3.0.250, ce0300fa
	Inserted into HashSC: 206.3.0.250, ce0300fa
	Inserted into HashSC: 206.3.30.251, ce031efb
	Inserted into HashSC: 206.3.30.251, ce031efb
	Inserted into HashSC: 195.145.119.24, c3917718
	Inserted into HashSC: 195.145.119.24, c3917718
	Inserted into HashSC: 195.145.119.25, c3917719
	Inserted into HashSC: 195.145.119.25, c3917719
	Inserted into HashSC: 198.5.208, c605d0
	Inserted into HashSC: 198.5.208, c605d0
	Inserted into HashSC: 198.5.210, c605d2
	Inserted into HashSC: 198.5.210, c605d2
	Inserted into HashSC: 204.162.97.205, cca261cd
	Inserted into HashSC: 204.162.97.205, cca261cd
	Inserted into HashSC: 204.162.97.228, cca261e4
	Inserted into HashSC: 204.162.97.228, cca261e4
	Inserted into HashSC: 204.162.97.231, cca261e7
	Inserted into HashSC: 204.162.97.231, cca261e7
	Inserted into HashSC: 204.162.97.3, cca26103
	Inserted into HashSC: 204.162.97.3, cca26103
	Inserted into HashSC: 204.162.97.32, cca26120
	Inserted into HashSC: 204.162.97.32, cca26120
	Inserted into HashSC: 204.162.98.11, cca2620b
	Inserted into HashSC: 204.162.98.11, cca2620b
	Inserted into HashSC: 204.162.98.12, cca2620c
	Inserted into HashSC: 204.162.98.12, cca2620c
	Inserted into HashSC: 204.162.98.124, cca2627c
	Inserted into HashSC: 204.162.98.124, cca2627c
	Inserted into HashSC: 204.162.98.126, cca2627e
	Inserted into HashSC: 204.162.98.126, cca2627e
	Inserted into HashSC: 204.162.98.151, cca26297
	Inserted into HashSC: 204.162.98.151, cca26297
	Inserted into HashSC: 204.162.98.161, cca262a1
	Inserted into HashSC: 204.162.98.161, cca262a1
	Inserted into HashSC: 204.162.98.168, cca262a8
	Inserted into HashSC: 204.162.98.168, cca262a8
	Inserted into HashSC: 204.162.98.18, cca26212
	Inserted into HashSC: 204.162.98.18, cca26212
	Inserted into HashSC: 204.162.98.192, cca262c0
	Inserted into HashSC: 204.162.98.192, cca262c0
	Inserted into HashSC: 204.162.98.2, cca26202
	Inserted into HashSC: 204.162.98.2, cca26202
	Inserted into HashSC: 204.162.98.237, cca262ed
	Inserted into HashSC: 204.162.98.237, cca262ed
	Inserted into HashSC: 204.162.98.27, cca2621b
	Inserted into HashSC: 204.162.98.27, cca2621b
	Inserted into HashSC: 204.162.98.3, cca26203
	Inserted into HashSC: 204.162.98.3, cca26203
	Inserted into HashSC: 204.162.98.36, cca26224
	Inserted into HashSC: 204.162.98.36, cca26224
	Inserted into HashSC: 204.162.98.38, cca26226
	Inserted into HashSC: 204.162.98.38, cca26226
	Inserted into HashSC: 204.162.98.4, cca26204
	Inserted into HashSC: 204.162.98.4, cca26204
	Inserted into HashSC: 204.162.98.45, cca2622d
	Inserted into HashSC: 204.162.98.45, cca2622d
	Inserted into HashSC: 204.162.98.48, cca26230
	Inserted into HashSC: 204.162.98.48, cca26230
	Inserted into HashSC: 204.162.98.49, cca26231
	Inserted into HashSC: 204.162.98.49, cca26231
	Inserted into HashSC: 204.162.98.5, cca26205
	Inserted into HashSC: 204.162.98.5, cca26205
	Inserted into HashSC: 204.162.98.6, cca26206
	Inserted into HashSC: 204.162.98.6, cca26206
	Inserted into HashSC: 204.162.98.7, cca26207
	Inserted into HashSC: 204.162.98.7, cca26207
	Inserted into HashSC: 204.162.98.8, cca26208
	Inserted into HashSC: 204.162.98.8, cca26208
	Inserted into HashSC: 204.162.98.80, cca26250
	Inserted into HashSC: 204.162.98.80, cca26250
	Inserted into HashSC: 204.162.98.88, cca26258
	Inserted into HashSC: 204.162.98.88, cca26258
	Inserted into HashSC: 204.162.98.9, cca26209
	Inserted into HashSC: 204.162.98.9, cca26209
	Inserted into HashSC: 204.162.98.91, cca2625b
	Inserted into HashSC: 204.162.98.91, cca2625b
	Inserted into HashSC: 204.162.98.98, cca26262
	Inserted into HashSC: 204.162.98.98, cca26262
	Inserted into HashSC: 204.202.132.19, ccca8413
	Inserted into HashSC: 204.202.132.19, ccca8413

	Contents of HashSC with the IpValue key:
	   0: .....
	   1: .....
	   2: .....
	   3: 204.162.98.192, cca262c0
	   4: 205.226.203.62, cde2cb3e
	   5: .....
	   6: 204.162.98.98, cca26262
	   7: 204.162.98.2, cca26202
	   8: 204.162.98.3, cca26203
	   9: 204.162.98.4, cca26204
	  10: 204.162.98.5, cca26205
	  11: 204.162.98.6, cca26206
	  12: 195.145.119.24, c3917718 -> 204.162.98.7, cca26207
	  13: 195.145.119.25, c3917719 -> 204.162.98.8, cca26208 -> 204.202.132.19, ccca8413
	  14: 204.162.98.9, cca26209
	  15: .....
	  16: 206.3.30.251, ce031efb -> 204.162.98.11, cca2620b
	  17: 204.162.98.12, cca2620c
	  18: .....
	  19: .....
	  20: .....
	  21: .....
	  22: .....
	  23: 204.162.98.18, cca26212
	  24: .....
	  25: .....
	  26: .....
	  27: .....
	  28: .....
	  29: .....
	  30: .....
	  31: 205.226.203.186, cde2cbba
	  32: 204.162.98.124, cca2627c -> 204.162.98.27, cca2621b
	  33: .....
	  34: 204.162.98.126, cca2627e
	  35: .....
	  36: .....
	  37: .....
	  38: .....
	  39: .....
	  40: .....
	  41: 204.162.97.1, cca26101 -> 204.162.98.36, cca26224
	  42: 204.162.97.2, cca26102
	  43: 205.226.201, cde2c9 -> 204.162.97.3, cca26103 -> 204.162.98.38, cca26226
	  44: .....
	  45: .....
	  46: .....
	  47: .....
	  48: 204.162.98.237, cca262ed
	  49: .....
	  50: 204.162.98.45, cca2622d
	  51: 204.162.97.205, cca261cd
	  52: .....
	  53: 204.162.98.48, cca26230
	  54: 204.162.98.49, cca26231
	  55: .....
	  56: .....
	  57: 204.162.97.17, cca26111
	  58: 206.3.30.196, ce031ec4
	  59: 202.33.250.146, ca21fa92 -> 204.162.98.151, cca26297
	  60: 202.33.250.147, ca21fa93
	  61: 202.33.250.148, ca21fa94
	  62: 202.33.250.149, ca21fa95
	  63: 205.266.204.238, ce0accee -> 202.33.250.150, ca21fa96
	  64: 202.33.250.151, ca21fa97
	  65: 202.33.250.152, ca21fa98
	  66: 202.33.250.153, ca21fa99
	  67: 202.33.250.154, ca21fa9a
	  68: .....
	  69: 204.162.98.161, cca262a1
	  70: .....
	  71: .....
	  72: 204.162.97.32, cca26120
	  73: .....
	  74: 205.226.203.35, cde2cb23 -> 204.162.97.228, cca261e4
	  75: .....
	  76: 204.162.98.168, cca262a8
	  77: 204.162.97.231, cca261e7
	  78: .....
	  79: .....
	  80: 204.162.96, cca260
	  81: .....
	  82: .....
	  83: 198.5.208, c605d0
	  84: .....
	  85: 198.5.210, c605d2 -> 204.162.98.80, cca26250
	  86: .....
	  87: .....
	  88: .....
	  89: .....
	  90: .....
	  91: .....
	  92: .....
	  93: 204.162.98.88, cca26258
	  94: .....
	  95: 205.226.203.56, cde2cb38 -> 204.162.97.152, cca26198 -> 206.3.0.250, ce0300fa
	  96: 204.162.98.91, cca2625b

	In the HashSC object:

	Table Size = 97
	Number of entries = 61
	Load factor = 0.6288659793814433
	Number of collisions = 17
	Longest Linked List = 3

	Contents of HashQP with the String key:
	   0: .....
	   1: 204.162.98.88, cca26258
	   2: .....
	   3: .....
	   4: .....
	   5: .....
	   6: 198.5.208, c605d0
	   7: 204.162.97.228, cca261e4
	   8: .....
	   9: .....
	  10: .....
	  11: 204.162.98.36, cca26224
	  12: .....
	  13: 204.162.98.38, cca26226
	  14: .....
	  15: .....
	  16: .....
	  17: .....
	  18: .....
	  19: .....
	  20: .....
	  21: .....
	  22: 204.202.132.19, ccca8413
	  23: .....
	  24: 204.162.98.151, cca26297
	  25: .....
	  26: .....
	  27: .....
	  28: .....
	  29: .....
	  30: .....
	  31: 204.162.98.91, cca2625b
	  32: .....
	  33: .....
	  34: .....
	  35: 198.5.210, c605d2
	  36: .....
	  37: 204.162.97.231, cca261e7
	  38: 204.162.98.98, cca26262
	  39: .....
	  40: .....
	  41: .....
	  42: .....
	  43: .....
	  44: .....
	  45: .....
	  46: .....
	  47: 204.162.98.45, cca2622d
	  48: .....
	  49: .....
	  50: 202.33.250.146, ca21fa92
	  51: 202.33.250.147, ca21fa93
	  52: 202.33.250.148, ca21fa94
	  53: 202.33.250.149, ca21fa95
	  54: 204.162.98.48, cca26230
	  55: 204.162.98.49, cca26231
	  56: .....
	  57: .....
	  58: 205.226.203.56, cde2cb38
	  59: .....
	  60: .....
	  61: 204.162.98.161, cca262a1
	  62: 204.162.96, cca260
	  63: .....
	  64: .....
	  65: .....
	  66: .....
	  67: .....
	  68: 204.162.98.168, cca262a8
	  69: .....
	  70: .....
	  71: .....
	  72: .....
	  73: .....
	  74: .....
	  75: .....
	  76: .....
	  77: .....
	  78: .....
	  79: .....
	  80: .....
	  81: 202.33.250.150, ca21fa96
	  82: 202.33.250.151, ca21fa97
	  83: 202.33.250.152, ca21fa98
	  84: 205.226.203.186, cde2cbba
	  85: 202.33.250.153, ca21fa99
	  86: 202.33.250.154, ca21fa9a
	  87: .....
	  88: .....
	  89: .....
	  90: .....
	  91: 205.226.203.62, cde2cb3e
	  92: .....
	  93: .....
	  94: .....
	  95: .....
	  96: .....
	  97: .....
	  98: .....
	  99: .....
	 100: .....
	 101: .....
	 102: .....
	 103: .....
	 104: .....
	 105: .....
	 106: .....
	 107: .....
	 108: .....
	 109: .....
	 110: .....
	 111: 204.162.97.17, cca26111
	 112: .....
	 113: 204.162.98.124, cca2627c
	 114: .....
	 115: 204.162.98.126, cca2627e
	 116: .....
	 117: .....
	 118: .....
	 119: .....
	 120: .....
	 121: .....
	 122: 204.162.97.152, cca26198
	 123: .....
	 124: .....
	 125: .....
	 126: 206.3.30.196, ce031ec4
	 127: 204.162.97.205, cca261cd
	 128: .....
	 129: 204.162.98.11, cca2620b
	 130: 204.162.98.12, cca2620c
	 131: .....
	 132: .....
	 133: .....
	 134: .....
	 135: .....
	 136: 204.162.98.18, cca26212
	 137: .....
	 138: .....
	 139: .....
	 140: 204.162.98.2, cca26202
	 141: 204.162.98.3, cca26203
	 142: 204.162.98.4, cca26204
	 143: 204.162.98.237, cca262ed
	 144: 204.162.98.5, cca26205
	 145: 205.226.201, cde2c9
	 146: 204.162.98.7, cca26207
	 147: 204.162.98.8, cca26208
	 148: 204.162.98.6, cca26206
	 149: 204.162.97.1, cca26101
	 150: 204.162.97.2, cca26102
	 151: 204.162.97.3, cca26103
	 152: .....
	 153: 195.145.119.24, c3917718
	 154: 195.145.119.25, c3917719
	 155: .....
	 156: 204.162.98.9, cca26209
	 157: .....
	 158: 205.266.204.238, ce0accee
	 159: 206.3.0.250, ce0300fa
	 160: 206.3.30.251, ce031efb
	 161: .....
	 162: .....
	 163: .....
	 164: .....
	 165: .....
	 166: .....
	 167: .....
	 168: .....
	 169: .....
	 170: .....
	 171: .....
	 172: 204.162.98.27, cca2621b
	 173: 204.162.98.192, cca262c0
	 174: .....
	 175: .....
	 176: .....
	 177: .....
	 178: .....
	 179: .....
	 180: 204.162.97.32, cca26120
	 181: 205.226.203.35, cde2cb23
	 182: .....
	 183: .....
	 184: .....
	 185: .....
	 186: .....
	 187: .....
	 188: .....
	 189: .....
	 190: 204.162.98.80, cca26250
	 191: .....
	 192: .....
	 193: .....
	 194: .....
	 195: .....
	 196: .....

	In the HashQP object:

	Table Size = 197
	Number of entries = 61
	Load factor = 0.3096446700507614
	Number of collisions = 20
	Longest Collision Run = 3

	Testing HashSC with IpValue key:

	Retrieved in HashTable, IpAddress: 204.202.132.19, ccca8413, now trying to delete it
	The insert method for 204.202.132.19, ccca8413 returns false
	Removed 204.202.132.19, ccca8413 successfully!
	The contains method for Default IpAddress returns false
	Didn't retrieve Default IpAddress (GOOD!)
	The insert method for 0.0.0.0, 0 returns true
	Removed 0.0.0.0, 0 successfully!

	Testing HashQP with String key:

	Retrieved in HashTable, IpAddress: 204.202.132.19, ccca8413, now trying to delete it
	The insert method for 204.202.132.19, ccca8413 returns false
	Removed 204.202.132.19, ccca8413 successfully!
	The contains method for Default IpAddress returns false
	Didn't retrieve Default IpAddress (GOOD!)
	The insert method for 0.0.0.0, 0 returns true
	Removed 0.0.0.0, 0 successfully!

	Now the contents of HashSC with the IpValue key:
	   0: .....
	   1: .....
	   2: .....
	   3: 204.162.98.192, cca262c0
	   4: 205.226.203.62, cde2cb3e
	   5: .....
	   6: 204.162.98.98, cca26262
	   7: 204.162.98.2, cca26202
	   8: 204.162.98.3, cca26203
	   9: 204.162.98.4, cca26204
	  10: 204.162.98.5, cca26205
	  11: 204.162.98.6, cca26206
	  12: 195.145.119.24, c3917718 -> 204.162.98.7, cca26207
	  13: 195.145.119.25, c3917719 -> 204.162.98.8, cca26208
	  14: 204.162.98.9, cca26209
	  15: .....
	  16: 206.3.30.251, ce031efb -> 204.162.98.11, cca2620b
	  17: 204.162.98.12, cca2620c
	  18: .....
	  19: .....
	  20: .....
	  21: .....
	  22: .....
	  23: 204.162.98.18, cca26212
	  24: .....
	  25: .....
	  26: .....
	  27: .....
	  28: .....
	  29: .....
	  30: .....
	  31: 205.226.203.186, cde2cbba
	  32: 204.162.98.124, cca2627c -> 204.162.98.27, cca2621b
	  33: .....
	  34: 204.162.98.126, cca2627e
	  35: .....
	  36: .....
	  37: .....
	  38: .....
	  39: .....
	  40: .....
	  41: 204.162.97.1, cca26101 -> 204.162.98.36, cca26224
	  42: 204.162.97.2, cca26102
	  43: 205.226.201, cde2c9 -> 204.162.97.3, cca26103 -> 204.162.98.38, cca26226
	  44: .....
	  45: .....
	  46: .....
	  47: .....
	  48: 204.162.98.237, cca262ed
	  49: .....
	  50: 204.162.98.45, cca2622d
	  51: 204.162.97.205, cca261cd
	  52: .....
	  53: 204.162.98.48, cca26230
	  54: 204.162.98.49, cca26231
	  55: .....
	  56: .....
	  57: 204.162.97.17, cca26111
	  58: 206.3.30.196, ce031ec4
	  59: 202.33.250.146, ca21fa92 -> 204.162.98.151, cca26297
	  60: 202.33.250.147, ca21fa93
	  61: 202.33.250.148, ca21fa94
	  62: 202.33.250.149, ca21fa95
	  63: 205.266.204.238, ce0accee -> 202.33.250.150, ca21fa96
	  64: 202.33.250.151, ca21fa97
	  65: 202.33.250.152, ca21fa98
	  66: 202.33.250.153, ca21fa99
	  67: 202.33.250.154, ca21fa9a
	  68: .....
	  69: 204.162.98.161, cca262a1
	  70: .....
	  71: .....
	  72: 204.162.97.32, cca26120
	  73: .....
	  74: 205.226.203.35, cde2cb23 -> 204.162.97.228, cca261e4
	  75: .....
	  76: 204.162.98.168, cca262a8
	  77: 204.162.97.231, cca261e7
	  78: .....
	  79: .....
	  80: 204.162.96, cca260
	  81: .....
	  82: .....
	  83: 198.5.208, c605d0
	  84: .....
	  85: 198.5.210, c605d2 -> 204.162.98.80, cca26250
	  86: .....
	  87: .....
	  88: .....
	  89: .....
	  90: .....
	  91: .....
	  92: .....
	  93: 204.162.98.88, cca26258
	  94: .....
	  95: 205.226.203.56, cde2cb38 -> 204.162.97.152, cca26198 -> 206.3.0.250, ce0300fa
	  96: 204.162.98.91, cca2625b

	Now the contents of HashQP with the String key has:
	   0: .....
	   1: 204.162.98.88, cca26258
	   2: .....
	   3: .....
	   4: .....
	   5: .....
	   6: 198.5.208, c605d0
	   7: 204.162.97.228, cca261e4
	   8: .....
	   9: .....
	  10: .....
	  11: 204.162.98.36, cca26224
	  12: .....
	  13: 204.162.98.38, cca26226
	  14: .....
	  15: .....
	  16: .....
	  17: .....
	  18: .....
	  19: .....
	  20: .....
	  21: .....
	  22: .....
	  23: .....
	  24: 204.162.98.151, cca26297
	  25: .....
	  26: .....
	  27: .....
	  28: .....
	  29: .....
	  30: .....
	  31: 204.162.98.91, cca2625b
	  32: .....
	  33: .....
	  34: .....
	  35: 198.5.210, c605d2
	  36: .....
	  37: 204.162.97.231, cca261e7
	  38: 204.162.98.98, cca26262
	  39: .....
	  40: .....
	  41: .....
	  42: .....
	  43: .....
	  44: .....
	  45: .....
	  46: .....
	  47: 204.162.98.45, cca2622d
	  48: .....
	  49: .....
	  50: 202.33.250.146, ca21fa92
	  51: 202.33.250.147, ca21fa93
	  52: 202.33.250.148, ca21fa94
	  53: 202.33.250.149, ca21fa95
	  54: 204.162.98.48, cca26230
	  55: 204.162.98.49, cca26231
	  56: .....
	  57: .....
	  58: 205.226.203.56, cde2cb38
	  59: .....
	  60: .....
	  61: 204.162.98.161, cca262a1
	  62: 204.162.96, cca260
	  63: .....
	  64: .....
	  65: .....
	  66: .....
	  67: .....
	  68: 204.162.98.168, cca262a8
	  69: .....
	  70: .....
	  71: .....
	  72: .....
	  73: .....
	  74: .....
	  75: .....
	  76: .....
	  77: .....
	  78: .....
	  79: .....
	  80: .....
	  81: 202.33.250.150, ca21fa96
	  82: 202.33.250.151, ca21fa97
	  83: 202.33.250.152, ca21fa98
	  84: 205.226.203.186, cde2cbba
	  85: 202.33.250.153, ca21fa99
	  86: 202.33.250.154, ca21fa9a
	  87: .....
	  88: .....
	  89: .....
	  90: .....
	  91: 205.226.203.62, cde2cb3e
	  92: .....
	  93: .....
	  94: .....
	  95: .....
	  96: .....
	  97: .....
	  98: .....
	  99: .....
	 100: .....
	 101: .....
	 102: .....
	 103: .....
	 104: .....
	 105: .....
	 106: .....
	 107: .....
	 108: .....
	 109: .....
	 110: .....
	 111: 204.162.97.17, cca26111
	 112: .....
	 113: 204.162.98.124, cca2627c
	 114: .....
	 115: 204.162.98.126, cca2627e
	 116: .....
	 117: .....
	 118: .....
	 119: .....
	 120: .....
	 121: .....
	 122: 204.162.97.152, cca26198
	 123: .....
	 124: .....
	 125: .....
	 126: 206.3.30.196, ce031ec4
	 127: 204.162.97.205, cca261cd
	 128: .....
	 129: 204.162.98.11, cca2620b
	 130: 204.162.98.12, cca2620c
	 131: .....
	 132: .....
	 133: .....
	 134: .....
	 135: .....
	 136: 204.162.98.18, cca26212
	 137: .....
	 138: .....
	 139: .....
	 140: 204.162.98.2, cca26202
	 141: 204.162.98.3, cca26203
	 142: 204.162.98.4, cca26204
	 143: 204.162.98.237, cca262ed
	 144: 204.162.98.5, cca26205
	 145: 205.226.201, cde2c9
	 146: 204.162.98.7, cca26207
	 147: 204.162.98.8, cca26208
	 148: 204.162.98.6, cca26206
	 149: 204.162.97.1, cca26101
	 150: 204.162.97.2, cca26102
	 151: 204.162.97.3, cca26103
	 152: .....
	 153: 195.145.119.24, c3917718
	 154: 195.145.119.25, c3917719
	 155: .....
	 156: 204.162.98.9, cca26209
	 157: .....
	 158: 205.266.204.238, ce0accee
	 159: 206.3.0.250, ce0300fa
	 160: 206.3.30.251, ce031efb
	 161: .....
	 162: .....
	 163: .....
	 164: .....
	 165: .....
	 166: .....
	 167: .....
	 168: .....
	 169: .....
	 170: .....
	 171: .....
	 172: 204.162.98.27, cca2621b
	 173: 204.162.98.192, cca262c0
	 174: .....
	 175: .....
	 176: .....
	 177: .....
	 178: .....
	 179: .....
	 180: 204.162.97.32, cca26120
	 181: 205.226.203.35, cde2cb23
	 182: .....
	 183: .....
	 184: .....
	 185: .....
	 186: .....
	 187: .....
	 188: .....
	 189: .....
	 190: 204.162.98.80, cca26250
	 191: .....
	 192: .....
	 193: .....
	 194: .....
	 195: .....
	 196: .....

*/